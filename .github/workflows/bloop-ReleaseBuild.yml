name: bloop Build, Sign & Release

on:
  workflow_dispatch:
    inputs:
      public_release:
        description: 'Public Release'
        type: boolean
        required: true
        default: true
      perform_sign:
        description: 'Sign'
        type: boolean
        required: true
        default: true
      perform_release:
        description: 'Release'
        type: boolean
        required: true
        default: false

env:
  DOTNET_NOLOGO: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  outputDirectory: ${{ github.workspace}}/app

jobs:
  build:
    permissions:
      contents: read

    name: Build app
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
 
    - name: 'Setup .NET SDK'
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        dotnet-version: | 
          9.0.x

    - name: 'Configure versioning'
      uses: dotnet/nbgv@f088059084cb5d872e9d1a994433ca6440c2bf72 # v0.4.2
      with:
        setAllVars: true
        path: ./bloop
    - run: |
        echo "Stamping as v$NBGV_SemVer2"

    - name: 'Build x64'
      id: buildx64
      run: dotnet publish bloop -c Release -r win-x64 -p:PublishSingleFile=true --self-contained true -o ${{ env.outputDirectory }}/x64 --property:PublicRelease=${{ inputs.public_release }}

    - name: 'Build arm64'
      id: buildarm
      run: dotnet publish bloop -c Release -r win-arm64 -p:PublishSingleFile=true --self-contained true -o ${{ env.outputDirectory }}/arm64 --property:PublicRelease=${{ inputs.public_release }}

    - name: 'Version Stamp'
      run: echo NBGV_SemVer2=$NBGV_SemVer2 > ${{ env.outputDirectory }}/version.env

    - name: Upload Unsigned Artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: unsigned-executables
        path: |
          ${{ env.outputDirectory }}/**/bloop.exe
        retention-days: 5

    - name: Upload Version Artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: version-information
        path: |
          ${{ env.outputDirectory }}/version.env
        retention-days: 5


  sign:
    name: Sign Release
    needs: build
    runs-on: windows-latest
    if:  ${{ inputs.perform_sign }} 
    environment: codeSign
    permissions:
      contents: read
      id-token: write
    steps:
    - name: 'Setup .NET SDK'
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1

    - name: 'Install Sign CLI'
      run: dotnet tool install --tool-path ./sign sign --version 0.9.1-beta.25278.1

    - name: 'Download build output'
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: unsigned-executables
        path : ${{ env.outputDirectory }}

    - name: List assets to be signed
      shell: pwsh
      run: >
        Get-ChildItem -Path ${{ env.outputDirectory }} -Include bloop.exe -Recurse -Force

    - name: Authenticate to Azure
      uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # 2.3.0
      with:
        allow-no-subscriptions : true
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Sign
      shell: pwsh
      run: >
        ./sign/sign code azure-key-vault
        **/bloop.exe
        --base-directory ${{ env.outputDirectory }}
        --azure-key-vault-url "${{ secrets.AZURE_KEY_VAULT_URL }}"
        --azure-key-vault-certificate "${{ secrets.AZURE_KEY_VAULT_CERTIFICATE }}"
        --publisher-name "idunno.org"
        --description "Sign bloop.exe"
        --description-url "https://github.com/blowdart/idunno.Bluesky.Utils"

    - name: Upload signed exes
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: signed-artifacts
        path: |
          ${{ env.outputDirectory }}/**/bloop.exe
          ${{ env.outputDirectory }}/version.env
        retention-days: 7

  release:
    name: Release app
    needs: sign
    runs-on: ubuntu-latest
    permissions:
      contents: read

    if:  ${{ inputs.perform_release }} 
    steps:
    - name: 'Download signing output'
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: signed-artifacts
        path : ${{ env.outputDirectory }}

    - name: 'Download version information'
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: version-information

    - name: Restore version information
      run: |
        export $(grep -v '^#' version.env | xargs -d '\n')

    - name: List assets to be published
      shell: pwsh
      run: >
        Get-ChildItem -Path ${{ env.outputDirectory }} -Include bloop.exe -Recurse -Force

    - name: Display version stamp
      run: |
        echo "Stamping release as bloop-$NBGV_SemVer2"

